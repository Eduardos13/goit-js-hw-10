{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst input = document.querySelector(\"#datetime-picker\"); // отримую інпут\\\nconst startBtn = document.querySelector(\"button\");\n\nlet userSelectedDate = null;\n\nconst options = {   // задаю налаштування пікеру, такі як 24-годинний формат\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      console.log(selectedDates[0]);\n\n      if(selectedDates[0].getTime() < Date.now()) { // перевіряю що дата не раніше моменту зараз\n        startBtn.classList.add(\"disable-btn\"); // роблю кнопку не актівною якщо дата раніше ніж зараз\n        startBtn.disabled = true;\n        return alert (\"Please choose a date in the future\"); // виводжу повідомлення про вибір дати в майбутньому\n      }\n      userSelectedDate = selectedDates[0]; // присвоюю обрану валідну дату змінній\n      startBtn.classList.remove(\"disable-btn\"); // роблю кнопку активною\n    }\n}\n\nconst fp = flatpickr(\"#datetime-picker\", options);  // ініціалізую бібліотеку\n\nconst handleClick = () => {\n\n    const intervalId = setInterval(convertMs, 1000);\n\n    function convertMs() {\n\n        const ms = userSelectedDate.getTime() - Date.now();\n\n        if(ms <= 0) {\n            clearInterval(intervalId);\n        }\n\n        // Number of milliseconds per unit of time\n        const second = 1000;\n        const minute = second * 60;\n        const hour = minute * 60;\n        const day = hour * 24;\n      \n        // Remaining days\n        const days = Math.floor(ms / day);\n        // Remaining hours\n        const hours = Math.floor((ms % day) / hour);\n        // Remaining minutes\n        const minutes = Math.floor(((ms % day) % hour) / minute);\n        // Remaining seconds\n        const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n        const timeValue = document.querySelector(\".value\");\n        timeValue.dataset.days = days;\n\n        console.log({ days, hours, minutes, seconds }); // прибрать\n        return { days, hours, minutes, seconds };\n      }\n\n      startBtn.disabled = true;\n      startBtn.classList.add(\"disable-btn\");\n      input.disabled = true;\n      input.classList.add(\"disabled-input\");\n}\n\nstartBtn.addEventListener(\"click\", handleClick);\n\n\n\n\n\n"],"names":["input","startBtn","userSelectedDate","options","selectedDates","flatpickr","handleClick","intervalId","convertMs","ms","second","minute","hour","day","days","hours","minutes","seconds","timeValue"],"mappings":"wIAGA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,QAAQ,EAEhD,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGrB,GAFA,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAEzBA,EAAc,CAAC,EAAE,QAAO,EAAK,KAAK,MACnC,OAAAH,EAAS,UAAU,IAAI,aAAa,EACpCA,EAAS,SAAW,GACb,MAAO,oCAAoC,EAEpDC,EAAmBE,EAAc,CAAC,EAClCH,EAAS,UAAU,OAAO,aAAa,CACxC,CACL,EAEWI,EAAU,mBAAoBF,CAAO,EAEhD,MAAMG,EAAc,IAAM,CAEtB,MAAMC,EAAa,YAAYC,EAAW,GAAI,EAE9C,SAASA,GAAY,CAEjB,MAAMC,EAAKP,EAAiB,QAAS,EAAG,KAAK,IAAG,EAE7CO,GAAM,GACL,cAAcF,CAAU,EAI5B,MAAMG,EAAS,IACTC,EAASD,EAAS,GAClBE,EAAOD,EAAS,GAChBE,EAAMD,EAAO,GAGbE,EAAO,KAAK,MAAML,EAAKI,CAAG,EAE1BE,EAAQ,KAAK,MAAON,EAAKI,EAAOD,CAAI,EAEpCI,EAAU,KAAK,MAAQP,EAAKI,EAAOD,EAAQD,CAAM,EAEjDM,EAAU,KAAK,MAASR,EAAKI,EAAOD,EAAQD,EAAUD,CAAM,EAE5DQ,EAAY,SAAS,cAAc,QAAQ,EACjD,OAAAA,EAAU,QAAQ,KAAOJ,EAEzB,QAAQ,IAAI,CAAE,KAAAA,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAAE,EACtC,CAAE,KAAAH,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAEDhB,EAAS,SAAW,GACpBA,EAAS,UAAU,IAAI,aAAa,EACpCD,EAAM,SAAW,GACjBA,EAAM,UAAU,IAAI,gBAAgB,CAC1C,EAEAC,EAAS,iBAAiB,QAASK,CAAW"}